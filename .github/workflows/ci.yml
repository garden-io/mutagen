# Set the workflow name.
name: CI

# Execute the workflow on pushes and pull requests.
on: [push, pull_request]

# Define the workflow jobs.
jobs:
  versioning:
    name: Versioning
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2
        with:
          go-version: '^1.17'
      - run: go version
      - name: "Analyze version information and release status"
        id: analyze
        run: |
          # Determine whether or not this is a release build.
          RELEASE="${{ github.event_name == 'push' && startsWith(github.ref, 'refs/tags/') }}"

          # Determine version target information for Go. If this is a release,
          # then we'll use the tag, otherwise we'll use the raw commit digest.
          if [ "${RELEASE}" = "true" ]; then
            TARGET="${GITHUB_REF#refs/tags/}"
          else
            TARGET="${GITHUB_SHA}"
          fi

          # Set outputs.
          echo ::set-output name=release::${RELEASE}
          echo ::set-output name=target::${TARGET}
    outputs:
      release: ${{ steps.analyze.outputs.release }}
      target: ${{ steps.analyze.outputs.target }}
  macos:
    name: macOS
    runs-on: macos-11
    needs: [versioning]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2
        with:
          go-version: '^1.17'
      - run: go version
      - name: "Install sha256sum"
        run: brew install coreutils
      - run: scripts/ci/setup_ssh.sh
      - run: scripts/ci/setup_partitions_darwin.sh
      - run: scripts/ci/analyze.sh
      - run: scripts/ci/test.sh
      - run: scripts/ci/build.sh
      - run: scripts/ci/sha256sum.sh
      - uses: actions/upload-artifact@v2
        with:
          name: bundles
          path: build/release/*
          retention-days: 2
  linux:
    name: Linux
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2
        with:
          go-version: '^1.17'
      - run: docker version
      - run: go version
      - run: scripts/ci/setup_ssh.sh
      - run: scripts/ci/setup_docker.sh
      - run: scripts/ci/analyze.sh
      - run: scripts/ci/test.sh
      - run: scripts/ci/test_386.sh
      - run: scripts/ci/build.sh
  windows:
    name: Windows
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2
        with:
          go-version: '^1.17'
      - run: docker version
      - run: go version
      - run: scripts/ci/setup_docker.sh
        shell: bash
      - run: diskpart /s scripts\ci\setup_partitions_windows.txt
      - run: scripts/ci/analyze.sh
        shell: bash
      - run: scripts/ci/test.sh
        shell: bash
      - run: scripts/ci/test_386.sh
        shell: bash
      - run: scripts/ci/build.sh
        shell: bash
  release:
    name: Release
    runs-on: ubuntu-latest
    needs: [versioning, macos, linux, windows]
    if: ${{ needs.versioning.outputs.release == 'true' }}
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: bundles
          path: bundles
      - uses: alexellis/upload-assets@0.2.3
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          asset_paths: '["bundles/*"]'
